C51 COMPILER V9.52.0.0   OLED                                                              04/23/2024 21:01:14 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN Oled.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE Oled.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          #include "Oledfont.h"
   4          
   5          sbit scl = P1^2;
   6          sbit sda = P1^3;
   7           
   8           
   9           void IIC_Start(){//IICËµ∑Âßã‰ø°Âè∑Âà§Êñ≠ÔºåÊ†πÊçÆÊó∂Â∫èÂõæ
  10   1        scl = 0;
  11   1        
  12   1        sda = 1;
  13   1        scl = 1;
  14   1        _nop_();
  15   1        sda = 0;
  16   1        _nop_();
  17   1      }
  18          
  19          void IIC_Stop(){//IICÁªàÊ≠¢‰ø°Âè∑Âà§Êñ≠ÔºåÊ†πÊçÆÊó∂Â∫èÂõæ
  20   1        scl = 0;
  21   1        sda = 0;
  22   1        scl = 1;
  23   1        _nop_();
  24   1        sda = 1;
  25   1        _nop_();
  26   1      }
  27          
  28          char IIC_ACK(){//IICÂ∫îÁ≠î‰ø°Âè∑Âà§Êñ≠Ê†πÊçÆËøîÂõûÂÄºÔºåÂ∫îÁ≠î‰ø°Âè∑‰ΩéÁîµÂπ≥ËøîÂõû0ÔºåÈ´òÁîµÂπ≥ËøîÂõû1
  29   1        char flag;
  30   1        sda = 1;
  31   1        _nop_();
  32   1        scl = 1;
  33   1        _nop_();
  34   1        flag = sda;
  35   1        _nop_();
  36   1        scl = 0;
  37   1        _nop_();
  38   1        
  39   1        return flag;
  40   1      }
  41          
  42          void IIC_Send_Byte(char dataSend){
  43   1        int i;
  44   1        
  45   1        for(i = 0;i<8;i++){
  46   2          scl = 0;//sclÊãâ‰ΩéÔºåËÆ©sdaÂÅöÂ•ΩÊï∞ÊçÆÂáÜÂ§á
  47   2          sda = dataSend & 0x80;//‰∏éÊØîËæÉÔºå‰øùÂ≠òdataSendÁöÑÊúÄÈ´ò‰ΩçÔºåÂÖ∂‰ΩôÁΩÆ0ÔºåÊúÄÁªàsda‰º†ËæìÁöÑÂ∞±ÊòØÂÖ
             -∂ÊúÄÈ´ò‰Ωç
  48   2          _nop_();//ÂèëÈÄÅÊï∞ÊçÆÂª∫Á´ãÊó∂Èó¥
  49   2          scl = 1;//sclÊãâÈ´òÂºÄÂßãÂèëÈÄÅ
  50   2          _nop_();//Êï∞ÊçÆÂèëÈÄÅÊó∂Èó¥
  51   2          scl = 0;//ÂèëÈÄÅÂÆåÊØïÊãâ‰Ωé
  52   2          _nop_();
  53   2          dataSend = dataSend << 1;//Â∑¶Áßª‰∏Ä‰ΩçÊï∞ÊçÆÔºåÂèëÈÄÅ‰∏ã‰∏Ä‰ΩçÊï∞ÊçÆ
  54   2        }
C51 COMPILER V9.52.0.0   OLED                                                              04/23/2024 21:01:14 PAGE 2   

  55   1      }
  56          
  57          void Oled_Write_Cmd(char dataCmd){
  58   1        //1. start()
  59   1        IIC_Start();
  60   1        //2. ÂÜôÂÖ• b0111 1000 0x78
  61   1        IIC_Send_Byte(0x78);
  62   1        //3. ACK
  63   1        IIC_ACK();
  64   1        //4. cotrol byte: (0)(0)000000 ÂÜôÂÖ•ÂëΩ‰ª§ (0)(1)000000ÂÜôÂÖ•Êï∞ÊçÆ
  65   1        IIC_Send_Byte(0x00);
  66   1        //5. ACK
  67   1        IIC_ACK();
  68   1        //6. ÂÜôÂÖ•Êåá‰ª§/Êï∞ÊçÆ
  69   1        IIC_Send_Byte(dataCmd);
  70   1        //7. ACK
  71   1        IIC_ACK();
  72   1        //8. STOP
  73   1        IIC_Stop();
  74   1      }
  75          
  76          void Oled_Write_Data(char dataData){
  77   1        //1. start()
  78   1        IIC_Start();
  79   1        //2. ÂÜôÂÖ• b0111 1000 0x78
  80   1        IIC_Send_Byte(0x78);
  81   1        //3. ACK
  82   1        IIC_ACK();
  83   1        //4. cotrol byte: (0)(0)000000 ÂÜôÂÖ•ÂëΩ‰ª§ (0)(1)000000ÂÜôÂÖ•Êï∞ÊçÆ
  84   1        IIC_Send_Byte(0x40);
  85   1        //5. ACK
  86   1        IIC_ACK();
  87   1        //6. ÂÜôÂÖ•Êåá‰ª§/Êï∞ÊçÆ
  88   1        IIC_Send_Byte(dataData);
  89   1        //7. ACK
  90   1        IIC_ACK();
  91   1        //8. STOP
  92   1        IIC_Stop();
  93   1      }
  94          
  95          void Oled_Init(void){
  96   1        Oled_Write_Cmd(0xAE);//--display off
  97   1        Oled_Write_Cmd(0x00);//---set low column address
  98   1        Oled_Write_Cmd(0x10);//---set high column address
  99   1        Oled_Write_Cmd(0x40);//--set start line address
 100   1        Oled_Write_Cmd(0xB0);//--set page address
 101   1        Oled_Write_Cmd(0x81); // contract control
 102   1        Oled_Write_Cmd(0xFF);//--128
 103   1        Oled_Write_Cmd(0xA1);//set segment remap
 104   1        Oled_Write_Cmd(0xA6);//--normal / reverse
 105   1        Oled_Write_Cmd(0xA8);//--set multiplex ratio(1 to 64)
 106   1        Oled_Write_Cmd(0x3F);//--1/32 duty
 107   1        Oled_Write_Cmd(0xC8);//Com scan direction
 108   1        Oled_Write_Cmd(0xD3);//-set display offset
 109   1        Oled_Write_Cmd(0x00);//
 110   1        Oled_Write_Cmd(0xD5);//set osc division
 111   1        Oled_Write_Cmd(0x80);//
 112   1        Oled_Write_Cmd(0xD8);//set area color mode off
 113   1        Oled_Write_Cmd(0x05);//
 114   1        Oled_Write_Cmd(0xD9);//Set Pre-Charge Period
 115   1        Oled_Write_Cmd(0xF1);//
 116   1        Oled_Write_Cmd(0xDA);//set com pin configuartion
C51 COMPILER V9.52.0.0   OLED                                                              04/23/2024 21:01:14 PAGE 3   

 117   1        Oled_Write_Cmd(0x12);//
 118   1        Oled_Write_Cmd(0xDB);//set Vcomh
 119   1        Oled_Write_Cmd(0x30);//
 120   1        Oled_Write_Cmd(0x8D);//set charge pump enable
 121   1        Oled_Write_Cmd(0x14);//
 122   1        Oled_Write_Cmd(0xAF);//--turn on oled panel
 123   1      }
 124          
 125          void Oled_Clear()
 126          {
 127   1          int i;
 128   1          int j;
 129   1          for(i=0; i<8; i++){
 130   2              Oled_Write_Cmd(0xB0 + i); // ‰æùÊ¨°ÊåáÂÆöPAGE0~PAGE7
 131   2              // ÊåáÂÆöSEG0   ÊåáÂÆöPAGEÈáåÈù¢ÁöÑÂÖ∑‰ΩìÁöÑÂàó
 132   2              Oled_Write_Cmd(0x00);
 133   2              Oled_Write_Cmd(0x10);
 134   2              // 0Âà∞127ÂàóÔºåÊØèÊ¨°ÂÜôÂÖ•0ÔºåÊØèÊ¨°ÂÜôÂÖ•Êï∞ÊçÆÂàóÂú∞ÂùÄËá™Âä®ÂÅèÁßª
 135   2              for(j=0; j<128; j++){
 136   3                  Oled_Write_Data(0);
 137   3              }
 138   2          }
 139   1      }
 140          
 141          void Oled_Show_Char(char row,char col,char oledChar){ //row*2-2
 142   1        unsigned int  i;
 143   1        Oled_Write_Cmd(0xb0+(row*2-2));                           //page 0
 144   1        Oled_Write_Cmd(0x00+(col&0x0f));                          //low
 145   1        Oled_Write_Cmd(0x10+(col>>4));                            //high  
 146   1        for(i=((oledChar-32)*16);i<((oledChar-32)*16+8);i++){
 147   2          Oled_Write_Data(F8X16[i]);                            //ÂÜôÊï∞ÊçÆoledTable1
 148   2        }
 149   1      
 150   1        Oled_Write_Cmd(0xb0+(row*2-1));                           //page 1
 151   1        Oled_Write_Cmd(0x00+(col&0x0f));                          //low
 152   1        Oled_Write_Cmd(0x10+(col>>4));                            //high
 153   1        for(i=((oledChar-32)*16+8);i<((oledChar-32)*16+8+8);i++){
 154   2          Oled_Write_Data(F8X16[i]);                            //ÂÜôÊï∞ÊçÆoledTable1
 155   2        }   
 156   1      }
 157          
 158          
 159          /******************************************************************************/
 160          // ÂáΩÊï∞ÂêçÁß∞ÔºöOled_Show_Char 
 161          // ËæìÂÖ•ÂèÇÊï∞ÔºöoledChar 
 162          // ËæìÂá∫ÂèÇÊï∞ÔºöÊó† 
 163          // ÂáΩÊï∞ÂäüËÉΩÔºöOLEDÊòæÁ§∫Âçï‰∏™Â≠óÁ¨¶
 164          /******************************************************************************/
 165          void Oled_Show_Str(char row,char col,char *str){
 166   1        while(*str!=0){
 167   2          Oled_Show_Char(row,col,*str);
 168   2          str++;
 169   2          col += 8; 
 170   2        }   
 171   1      }
 172          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    573    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   OLED                                                              04/23/2024 21:01:14 PAGE 4   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
